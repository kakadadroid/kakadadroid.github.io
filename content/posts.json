[{"title": "Rspec'ing a rials JSON Api", "timestamp": 1393871268, "modified": 1393871268, "filename": "3. Rspec'ing JSON Api", "content": "`render_view` was the missing piece: \nbecause rspec by default disables rendering of views to speed up the test. And that's how I was stuck for days trying to find bugs in the super short json.\n\n```ruby\n    describe Api::V1::TeamsController do\n\t\trender_views\n\t\tit \"returns a json array of teams\" do\n\t\t...\n        json = JSON.parse(response.body)\n        expect(json['teams']).not_to be_nil\n        end\n    end\n```", "post_id": "rspec'ing-a-rials-json-api"}, {"title": "Joining the Flappy craze", "timestamp": 1393868708, "modified": 1393868708, "filename": "2.flappy-quiz.md", "content": "**tl;dr**: my flappy clone [here](http://kakadadroid.github.io/flappy-quiz/).\n\nBeing swept by the current craze for flappy bird, I wanted to pass on this little birdy frustration and at the same time make something fun. I love the fact that flappy bird is so frustrating simple that to play you have to focus on some thing else other than the bird to do well. Some people suggesting looking at the skies behind. Some at the moving pipes. Others go further to add a [typing training in there](http://www.mrspeaker.net/dev/game/flappy/). \n\nOne interesting I found was this awesome [flappy maths saga](tikwid/flappy-math-saga) which tests your multiplication speed. It's beautiful because the split of attention really proves as a good brain teaser. I thought this could extend to other fields as well, so I wanted to make a frustrating quiz engin for multiple choice questions. But the pipe is only so long, so only true/false type questions and 2-choices were possible. \n\nI told this to my girlfriend and she said her english class full of 13yo's will love it. We used google spreadsheet to compile a small quiz, which I was planning to hardcode into the modified html flappy. But while sharing the google spreadsheet I remembered that it could be made a public link, and so there should be a way to read the content of the public spreadsheet directly from the html.  \n\n>\"The (sec2) kids went bananas!\"\n\nTurns out google spreadsheet do have an API, but the documentation is scarce and full of redirects between a few versions. From [this example](https://developers.google.com/gdata/samples/spreadsheet_sample) I figured out how to read the columns of a public spreadsheet, and voila, flappy-quiz just got its sheety backend wired up.\n\n```javascript\n\t//load questions\n\t$.getJSON(\"http://cors.io/spreadsheets.google.com/feeds/list\n\t\t/[google-sheet-uid]/od6/public/basic?alt=json\", function(data) {\n    \tvar rows = data.feed.entry;\n    \tfor(var i=0; i<rows.length; i++) {\n        \tvar t = rows[i].content.$t.split(/[ ,]+/);\n        \tvar question = {word:rows[i].title.$t, correct:t[1], wrong:t[3]};\n        \tquestions.push(question);\n\t\t}\n\t\tisQuestionLoaded = true;\n\t});\n```\n\n\nNow anyone can update the link and the flappy bird will have a different problem to solve to go through the pipe!\n\nSee it [flapping live here](http://kakadadroid.github.io/flappy-quiz/) and if you want to, [fork from here!](http://kakadadroid.github.io/flappy-quiz/)", "post_id": "joining-the-flappy-craze"}, {"title": "blog commit -m \"init\"", "timestamp": 1393787623, "modified": 1393787623, "filename": "post-1.md", "content": "This is yet another blog that I shall promise myself to keep. This one will talk about the projects and cool and uncool things that I've done.\n\nI saw a friend's [super cool blog](http://yangshun.im/cs3216/#/) and after a few minutes of picking around I found his little python-based page generators for blogs, [luna](https://github.com/yangshun/luna). I just lost all the excuses to delay this. Mainly because I just wanted to try out this 'blogging engin'.\n\nSeems pretty cool! Because of this I had to install a LAMP stack and run on localhost to preview every edit, but it's a one time set up and now I can blog in markdown(for which I need to refer to [the cheatsheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)).\n\nLet's get some shit done!", "post_id": "blog-commit--m-\"init\""}]